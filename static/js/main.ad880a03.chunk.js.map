{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js","components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","components/UI/Loader/Loader.css","containers/Auth/Auth.css","components/UI/Input/Input.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizList/QuizList.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css"],"names":["MenuToggle","props","cls","classes","isOpen","push","open","react_default","a","createElement","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","_this","onClose","renderLinks","map","link","index","key","NavLink","activeClassName","active","this","close","Fragment","UI_Backdrop_Backdrop","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","AnswersList_AnswerItem_AnswerItem","ActiveQuiz","Question","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_Button_Button","onRetry","Link","axios","create","baseURL","Loader_Loader","center","Loader","Quiz","isFinished","activeQuestion","answerState","loader","retryHandler","isQuizFinished","onAnswerClickHandler","answerId","rightAnswerId","defineProperty","timeout","window","setTimeout","prevState","clearTimeout","url","match","params","get","response","data","console","log","_context","t0","QuizWrapper","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","QuizList","quizes","loading","renderQuizes","name","forEach","concat","React","isInvalid","_ref","valid","touched","shouldValidate","Input_Input","inputType","Input","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","_callee","authData","regenerator_default","wrap","prev","next","returnSecureToken","post","sent","stop","registerHandler","_callee2","_context2","submitHandler","event","preventDefault","onChangeHandler","controlName","objectSpread","control","target","validateControl","renderInputs","isValid","trim","is","onSubmit","AuthForm","createControl","config","Auxiliary","Select_Select","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","_this$state$formContr","questionItem","createQuizHandler","e","changeHandler","arguments","undefined","validate","hasOwnProperty","validateForm","selectChangeHandler","_this2","select","renderControls","App","hoc_Layout_Layout","Switch","Route","path","component","Boolean","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","application","BrowserRouter","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","success","error","primary","lds-ripple"],"mappings":"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","file":"static/js/main.ad880a03.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './MenuToggle.css';\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa',\n\n    ];\n\n    if (props.isOpen) {\n        cls.push('fa-times');\n        cls.push(classes.open);\n    } else {\n        cls.push('fa-bars');\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n};\n\nexport default MenuToggle;","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}  /> ;\n\nexport default Backdrop;","import React, {Component} from 'react';\nimport classes from './Drawer.css';\nimport Backdrop from './../../UI/Backdrop/Backdrop';\nimport {NavLink} from 'react-router-dom';\n\nconst links = [\n    {to: '/', label: 'Список', exact: true},\n    {to: '/auth', label: 'Авторизация', exact: false},\n    {to: '/quiz-creator', label: 'Создать тест', exact: false},\n];\n\nclass Drawer extends Component {\n    clickHandler = () => {\n        this.props.onClose();\n    };\n\n    renderLinks = () => {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    };\n\n    render() {\n        const cls = [classes.Drawer];\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Drawer;\n","import React, {Component} from 'react';\nimport classes from './Layout.css';\nimport MenuToggle from './../../components/Navigation/MenuToggle/MenuToggle';\nimport Drawer from './../../components/Navigation/Drawer/Drawer';\n\nclass Layout extends Component {\n    state = {\n        menu: false\n    };\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu,\n        });\n    };\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false,\n        })\n    };\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n                <Drawer\n                    isOpen={this.state.menu}\n                    onClose={this.menuCloseHandler}\n                />\n\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport classes from './AnswerItem.css';\n\nconst AnswerItem = props => {\n    const cls = [classes.AnswerItem];\n    if (props.state) {\n        cls.push(classes[props.state]);\n    }\n\n    return (\n        <li\n            className={cls.join(' ')}\n            onClick={() => (props.onAnswerClick(props.answer.id))}\n        >\n            {props.answer.text}\n        </li>\n    )\n};\n\nexport default AnswerItem;","import React from 'react';\nimport classes from './AnswersList.css';\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = props => {\n    return (\n        <ul className={classes.AnswersList}>\n            {props.answers.map((answer, index) => (\n                    <AnswerItem\n                        key={index}\n                        answer={answer}\n                        onAnswerClick={props.onAnswerClick}\n                        state={props.state ? props.state[answer.id] : null}\n                    />\n                )\n            )}\n        </ul>\n    )\n};\n\nexport default AnswersList;","import React from 'react';\nimport classes from './ActiveQuiz.css';\nimport AnswersList from './AnswersList/AnswersList';\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n            <small>{props.answerNumber} из {props.quizLength}</small>\n        </p>\n\n        <AnswersList\n            state={props.state}\n            answers={props.answers}\n            onAnswerClick={props.onAnswerClick}\n        />\n    </div>\n);\n\nexport default ActiveQuiz;","import React from 'react';\nimport classes from './Button.css';\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ];\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n\n};\nexport default Button;","import React from 'react';\nimport classes from './FinishedQuiz.css';\nimport Button from './../UI/Button/Button';\nimport {Link} from 'react-router-dom';\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++;\n        }\n        return total;\n    }, 0);\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ];\n\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    );\n                })}\n            </ul>\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n            <div>\n                <Button\n                    onClick={props.onRetry}\n                    type={'primary'}\n                >\n                    Повторить\n                </Button>\n                <Link to={'/'}>\n                    <Button\n                        type={'success'}\n                    >\n                        Перейти в список тестов\n                    </Button>\n                </Link>\n            </div>\n        </div>\n    )\n};\n\nexport default FinishedQuiz;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-ef355.firebaseio.com'\n})","import React from 'react'\nimport classes from './Loader.css'\n\nexport default props => (\n    <div className={classes.center}>\n        <div className={classes.Loader}>\n            <div/>\n            <div/>\n        </div>\n    </div>\n)\n","import React, {Component} from 'react';\nimport classes from './Quiz.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\nimport Loader from './../../components/UI/Loader/Loader';\n\nclass Quiz extends Component {\n    state = {\n        results: {},\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,\n        quiz: [],\n        loader: true\n    };\n\n    retryHandler = () => {\n        this.setState({\n            results: {},\n            isFinished: false,\n            activeQuestion: 0,\n            answerState: null,\n        })\n    };\n\n    isQuizFinished = () => {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    };\n\n    onAnswerClickHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0];\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion];\n        const results = this.state.results;\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success';\n            }\n\n            this.setState({\n                answerState: {\n                    [answerId]: 'success'\n                },\n                results\n            });\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    });\n                } else {\n                    this.setState((prevState) => {\n                        return (\n                            {\n                                activeQuestion: prevState.activeQuestion + 1,\n                                answerState: null\n                            }\n                        )\n                    })\n                }\n                window.clearTimeout(timeout);\n            }, 1000);\n        } else {\n            results[question.id] = 'error';\n            this.setState({\n                answerState: {\n                    [answerId]: 'error',\n                },\n                results\n            });\n        }\n    };\n\n    async componentDidMount() {\n        try {\n            const url = `/quizes/${this.props.match.params.id}.json`;\n            const response = await axios.get(url);\n            const quiz = response.data;\n            this.setState({\n                loader: false,\n                quiz\n            })\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы</h1>\n                    {this.state.loader\n                        ? <Loader/>\n                        : this.state.isFinished\n                            ? <FinishedQuiz\n                                onRetry={this.retryHandler}\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                            />\n                            : <ActiveQuiz\n                                question={this.state.quiz[this.state.activeQuestion].question}\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\n                                onAnswerClick={this.onAnswerClickHandler}\n                                quizLength={this.state.quiz.length}\n                                answerNumber={this.state.activeQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz;","import React from 'react';\nimport classes from './QuizList.css';\nimport {NavLink} from \"react-router-dom\";\nimport axios from '../../axios/axios-quiz';\nimport Loader from './../../components/UI/Loader/Loader';\n\nexport default class QuizList extends React.Component {\n    state = {\n        quizes: [],\n        loading: true,\n    };\n\n    renderQuizes = () => {\n        return this.state.quizes.map(quiz => {\n            return (\n                <div key={quiz.id}>\n                    <li>\n                        <NavLink to={'/quiz/' + quiz.id}>\n                            {quiz.name}\n                        </NavLink>\n                    </li>\n                </div>\n            )\n        })\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get('/quizes.json');\n            const quizes = [];\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест №${index + 1}`\n                })\n            });\n\n            this.setState({\n                quizes,\n                loading: false\n            })\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов</h1>\n                    {this.state.loading\n                        ? <Loader/>\n                        : <ul>\n                            {this.renderQuizes()}\n                        </ul>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport classes from \"./Input.css\";\n\nfunction isInvalid({ valid, touched, shouldValidate }) {\n  return !valid && shouldValidate && touched;\n}\n\nexport default props => {\n  const inputType = props.type || \"text\";\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid);\n  }\n\n  return (\n    <div className={cls.join(\" \")}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {isInvalid(props) ? (\n        <span>{props.errorMessage || \"Введите верное значение\"}</span>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classes from \"./Auth.css\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport is from \"is_js\";\nimport axios from \"axios\";\n\nexport default class Auth extends React.Component {\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"Email\",\n        errorMessage: \"Введите корректный email\",\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: \"\",\n        type: \"password\",\n        label: \"Пароль\",\n        errorMessage: \"Введите корректный пароль\",\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  };\n\n  loginHandler = async () => {\n    const authData = {\n      email: this.state.formControls.email.value,\n      password: this.state.formControls.password.value,\n      returnSecureToken: true\n    };\n    try {\n      const response = await axios.post(\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDLo3iUoZB7MWISz3u232Qia8jTm3rUl4Q\",\n        authData\n      );\n      console.log(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  registerHandler = async () => {\n    const authData = {\n      email: this.state.formControls.email.value,\n      password: this.state.formControls.password.value,\n      returnSecureToken: true\n    };\n    try {\n      const response = await axios.post(\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDLo3iUoZB7MWISz3u232Qia8jTm3rUl4Q\",\n        authData\n      );\n      console.log(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n  };\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.value = event.target.value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validation);\n\n    formControls[controlName] = control;\n    let isFormValid = true;\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n    this.setState({\n      formControls,\n      isFormValid\n    });\n  };\n\n  renderInputs = () => {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => {\n            this.onChangeHandler(event, controlName);\n          }}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n            {this.renderInputs()}\n            <Button\n              type=\"success\"\n              onClick={this.loginHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Войти\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={this.registerHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Зарегистрироваться\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true;\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n\n    return isFormValid\n}","export default props => props.children;\n","import React from 'react'\nimport classes from './Select.css'\n\nexport default props => {\n    const htmlFor = `${props.label}-${Math.random()}`;\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                        return (\n                            <option\n                                key={option.value + index}\n                                value={option.value}\n                            >\n                                {option.text}\n                            </option>\n                        )\n                    }\n                )}\n            </select>\n        </div>\n    )\n}","import React from \"react\";\nimport classes from \"./QuizCreator.css\";\nimport Button from \"../../components/UI/Button/Button\";\nimport {\n  createControl,\n  validate,\n  validateForm\n} from \"./../../form/formFramework.js\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport Select from \"../../components/UI/Select/Select\";\nimport axios from \"../../axios/axios-quiz\";\n\nfunction createOptionControl(number) {\n  return createControl(\n    {\n      label: `Вариант ${number}`,\n      errorMessage: \"Значение не может быть пустым\",\n      id: number\n    },\n    { required: true }\n  );\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl(\n      {\n        label: \"Введите вопрос\",\n        errorMessage: \"Вопрос не может быть пустым\"\n      },\n      { required: true }\n    ),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends React.Component {\n  state = {\n    quiz: [],\n    isFormValid: false,\n    formControls: createFormControls(),\n    rightAnswerId: 1\n  };\n\n  submitHandler(event) {\n    event.preventDefault();\n  }\n\n  addQuestionHandler = event => {\n    event.preventDefault();\n\n    const quiz = this.state.quiz.concat();\n    const index = quiz.length + 1;\n\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4\n    } = this.state.formControls;\n\n    const questionItem = {\n      question: question.value,\n      id: index,\n      rightAnswerId: this.state.rightAnswerId,\n      answers: [\n        { text: option1.value, id: option1.id },\n        { text: option2.value, id: option2.id },\n        { text: option3.value, id: option3.id },\n        { text: option4.value, id: option4.id }\n      ]\n    };\n\n    quiz.push(questionItem);\n    this.setState({\n      quiz,\n      isFormValid: false,\n      formControls: createFormControls(),\n      rightAnswerId: 1\n    });\n  };\n\n  createQuizHandler = async event => {\n    event.preventDefault();\n\n    try {\n      axios.post(\"/quizes.json\", this.state.quiz);\n      this.setState({\n        quiz: [],\n        isFormValid: false,\n        formControls: createFormControls(),\n        rightAnswerId: 1\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  changeHandler = (value, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.touched = true;\n    control.value = value;\n    control.valid = validate(control.value, control.validation);\n\n    formControls[controlName] = control;\n    this.setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n  };\n\n  selectChangeHandler = event => {\n    this.setState({\n      rightAnswerId: +event.target.value\n    });\n  };\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return (\n        <Auxiliary key={controlName + index}>\n          <Input\n            value={control.value}\n            valid={control.valid}\n            touched={control.touched}\n            label={control.label}\n            shouldValidate={!!control.validation}\n            errorMessage={control.errorMessage}\n            onChange={event => {\n              this.changeHandler(event.target.value, controlName);\n            }}\n          />\n          {index === 0 ? <hr /> : null}\n        </Auxiliary>\n      );\n    });\n  }\n\n  render() {\n    const select = (\n      <Select\n        label=\"Выберите правильный ответ\"\n        value={this.state.rightAnswerId}\n        onChange={this.selectChangeHandler}\n        options={[\n          { text: \"1\", value: \"1\" },\n          { text: \"2\", value: \"2\" },\n          { text: \"3\", value: \"3\" },\n          { text: \"4\", value: \"4\" }\n        ]}\n      />\n    );\n    return (\n      <div className={classes.QuizCreator}>\n        <div>\n          <h1>Создание теста</h1>\n          <form onSubmit={this.submitHandler}>\n            {this.renderControls()}\n            {select}\n            <Button\n              type=\"primary\"\n              onClick={this.addQuestionHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Добавить вопрос\n            </Button>\n\n            <Button\n              type=\"success\"\n              onClick={this.createQuizHandler}\n              disabled={this.state.quiz.length === 0}\n            >\n              Создать тест\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout.js\";\nimport Quiz from \"./containers/Quiz/Quiz.js\";\nimport QuizList from \"./containers/QuizList/QuizList.js\";\nimport Auth from \"./containers/Auth/Auth.js\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator.js\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/\" component={QuizList} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst reducer = (state = {}, action) => {\n  return state;\n};\nconst store = createStore(reducer, composeEnhancers(applyMiddleware()));\n\nconst application = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\nReactDOM.render(application, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--2Nzcl\",\"close\":\"Drawer__close--3eUiV\",\"active\":\"Drawer__active--WxScd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1mqO0\",\"open\":\"MenuToggle__open--1kMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--3J8Ip\",\"QuizWrapper\":\"Quiz__QuizWrapper--2cJp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--1xPLH\",\"Question\":\"ActiveQuiz__Question--2AtZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--2xulf\",\"success\":\"AnswerItem__success--17tyF\",\"error\":\"AnswerItem__error--2G-OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--3-Dtz\",\"success\":\"FinishedQuiz__success--1N7XY\",\"error\":\"FinishedQuiz__error--34veZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"error\":\"Button__error--tZCD8\",\"success\":\"Button__success--3d-85\",\"primary\":\"Button__primary--2Lss2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader__center--1YZNW\",\"Loader\":\"Loader__Loader--2iSOk\",\"lds-ripple\":\"Loader__lds-ripple--1XXys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2YUr1\",\"AuthForm\":\"Auth__AuthForm--2Xb4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--s67N0\",\"invalid\":\"Input__invalid--flTJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1WLwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--2oxZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--1_s5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--1rPbL\"};"],"sourceRoot":""}